{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/aljazira/src/component/LanguageContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport Body from \"./Body\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LanguageContext = /*#__PURE__*/createContext();\nexport const LanguageProvider = props => {\n  _s();\n\n  const [language, setLanguage] = useState(false);\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: [language, setLanguage],\n    children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LanguageProvider, \"qJCq9WS18gfOyhDwVQ4042rtfR4=\");\n\n_c = LanguageProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/aljazira/src/component/LanguageContext.js"],"names":["React","createContext","useState","Body","Footer","Header","LanguageContext","LanguageProvider","props","language","setLanguage"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,OAAO,MAAMC,eAAe,gBAAGL,aAAa,EAArC;AAEP,OAAO,MAAMM,gBAAgB,GAAGC,KAAK,IAAI;AAAA;;AACvC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AAEA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE,CAACO,QAAD,EAAWC,WAAX,CAAjC;AAAA,2BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARM;;GAAMH,gB;;KAAAA,gB","sourcesContent":["\nimport React, { createContext, useState } from \"react\";\nimport Body from \"./Body\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\n\nexport const LanguageContext = createContext();\n\nexport const LanguageProvider = props => {\n  const [language, setLanguage] = useState(false);\n  \n  return (\n    <LanguageContext.Provider value={[language, setLanguage]}>\n      <Header />\n    </LanguageContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}