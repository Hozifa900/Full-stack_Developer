{"ast":null,"code":"\"use strict\";\n\nconst {\n  nodeRoot\n} = require(\"../helpers/node\");\n\nconst {\n  mixin\n} = require(\"../../utils\");\n\nconst DocumentFragment = require(\"./DocumentFragment-impl\").implementation;\n\nconst DocumentOrShadowRootImpl = require(\"./DocumentOrShadowRoot-impl\").implementation;\n\nconst InnerHTMLImpl = require(\"../domparsing/InnerHTML-impl\").implementation;\n\nclass ShadowRootImpl extends DocumentFragment {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    const {\n      mode\n    } = privateData;\n    this._mode = mode;\n  }\n\n  _getTheParent(event) {\n    if (!event.composed && this === nodeRoot(event._path[0].item)) {\n      return null;\n    }\n\n    return this._host;\n  }\n\n  get mode() {\n    return this._mode;\n  }\n\n  get host() {\n    return this._host;\n  }\n\n}\n\nmixin(ShadowRootImpl.prototype, DocumentOrShadowRootImpl.prototype);\nmixin(ShadowRootImpl.prototype, InnerHTMLImpl.prototype);\nmodule.exports = {\n  implementation: ShadowRootImpl\n};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/aljazira/node_modules/jsdom/lib/jsdom/living/nodes/ShadowRoot-impl.js"],"names":["nodeRoot","require","mixin","DocumentFragment","implementation","DocumentOrShadowRootImpl","InnerHTMLImpl","ShadowRootImpl","constructor","globalObject","args","privateData","mode","_mode","_getTheParent","event","composed","_path","item","_host","host","prototype","module","exports"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAeC,OAAO,CAAC,iBAAD,CAA5B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAYD,OAAO,CAAC,aAAD,CAAzB;;AAEA,MAAME,gBAAgB,GAAGF,OAAO,CAAC,yBAAD,CAAP,CAAmCG,cAA5D;;AACA,MAAMC,wBAAwB,GAAGJ,OAAO,CAAC,6BAAD,CAAP,CAAuCG,cAAxE;;AACA,MAAME,aAAa,GAAGL,OAAO,CAAC,8BAAD,CAAP,CAAwCG,cAA9D;;AAEA,MAAMG,cAAN,SAA6BJ,gBAA7B,CAA8C;AAC5CK,EAAAA,WAAW,CAACC,YAAD,EAAeC,IAAf,EAAqBC,WAArB,EAAkC;AAC3C,UAAMF,YAAN,EAAoBC,IAApB,EAA0BC,WAA1B;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAWD,WAAjB;AACA,SAAKE,KAAL,GAAaD,IAAb;AACD;;AAEDE,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACnB,QAAI,CAACA,KAAK,CAACC,QAAP,IAAmB,SAAShB,QAAQ,CAACe,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAeC,IAAhB,CAAxC,EAA+D;AAC7D,aAAO,IAAP;AACD;;AAED,WAAO,KAAKC,KAAZ;AACD;;AAEO,MAAJP,IAAI,GAAG;AACT,WAAO,KAAKC,KAAZ;AACD;;AAEO,MAAJO,IAAI,GAAG;AACT,WAAO,KAAKD,KAAZ;AACD;;AAtB2C;;AAyB9CjB,KAAK,CAACK,cAAc,CAACc,SAAhB,EAA2BhB,wBAAwB,CAACgB,SAApD,CAAL;AACAnB,KAAK,CAACK,cAAc,CAACc,SAAhB,EAA2Bf,aAAa,CAACe,SAAzC,CAAL;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfnB,EAAAA,cAAc,EAAEG;AADD,CAAjB","sourcesContent":["\"use strict\";\n\nconst { nodeRoot } = require(\"../helpers/node\");\nconst { mixin } = require(\"../../utils\");\n\nconst DocumentFragment = require(\"./DocumentFragment-impl\").implementation;\nconst DocumentOrShadowRootImpl = require(\"./DocumentOrShadowRoot-impl\").implementation;\nconst InnerHTMLImpl = require(\"../domparsing/InnerHTML-impl\").implementation;\n\nclass ShadowRootImpl extends DocumentFragment {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n\n    const { mode } = privateData;\n    this._mode = mode;\n  }\n\n  _getTheParent(event) {\n    if (!event.composed && this === nodeRoot(event._path[0].item)) {\n      return null;\n    }\n\n    return this._host;\n  }\n\n  get mode() {\n    return this._mode;\n  }\n\n  get host() {\n    return this._host;\n  }\n}\n\nmixin(ShadowRootImpl.prototype, DocumentOrShadowRootImpl.prototype);\nmixin(ShadowRootImpl.prototype, InnerHTMLImpl.prototype);\n\nmodule.exports = {\n  implementation: ShadowRootImpl\n};\n"]},"metadata":{},"sourceType":"script"}