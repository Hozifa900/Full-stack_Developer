{"ast":null,"code":"\"use strict\";\n\nconst {\n  setupForSimpleEventAccessors\n} = require(\"../helpers/create-event-accessor\");\n\nconst {\n  fireAnEvent\n} = require(\"../helpers/events\");\n\nconst EventTargetImpl = require(\"../events/EventTarget-impl\").implementation;\n\nconst AbortSignal = require(\"../generated/AbortSignal\");\n\nclass AbortSignalImpl extends EventTargetImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData); // make event firing possible\n\n    this._ownerDocument = globalObject.document;\n    this.aborted = false;\n    this.abortAlgorithms = new Set();\n  }\n\n  static abort(globalObject) {\n    const abortSignal = AbortSignal.createImpl(globalObject, []);\n    abortSignal.aborted = true;\n    return abortSignal;\n  }\n\n  _signalAbort() {\n    if (this.aborted) {\n      return;\n    }\n\n    this.aborted = true;\n\n    for (const algorithm of this.abortAlgorithms) {\n      algorithm();\n    }\n\n    this.abortAlgorithms.clear();\n    fireAnEvent(\"abort\", this);\n  }\n\n  _addAlgorithm(algorithm) {\n    if (this.aborted) {\n      return;\n    }\n\n    this.abortAlgorithms.add(algorithm);\n  }\n\n  _removeAlgorithm(algorithm) {\n    this.abortAlgorithms.delete(algorithm);\n  }\n\n}\n\nsetupForSimpleEventAccessors(AbortSignalImpl.prototype, [\"abort\"]);\nmodule.exports = {\n  implementation: AbortSignalImpl\n};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/aljazira/node_modules/jsdom/lib/jsdom/living/aborting/AbortSignal-impl.js"],"names":["setupForSimpleEventAccessors","require","fireAnEvent","EventTargetImpl","implementation","AbortSignal","AbortSignalImpl","constructor","globalObject","args","privateData","_ownerDocument","document","aborted","abortAlgorithms","Set","abort","abortSignal","createImpl","_signalAbort","algorithm","clear","_addAlgorithm","add","_removeAlgorithm","delete","prototype","module","exports"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAmCC,OAAO,CAAC,kCAAD,CAAhD;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAkBD,OAAO,CAAC,mBAAD,CAA/B;;AACA,MAAME,eAAe,GAAGF,OAAO,CAAC,4BAAD,CAAP,CAAsCG,cAA9D;;AACA,MAAMC,WAAW,GAAGJ,OAAO,CAAC,0BAAD,CAA3B;;AAEA,MAAMK,eAAN,SAA8BH,eAA9B,CAA8C;AAC5CI,EAAAA,WAAW,CAACC,YAAD,EAAeC,IAAf,EAAqBC,WAArB,EAAkC;AAC3C,UAAMF,YAAN,EAAoBC,IAApB,EAA0BC,WAA1B,EAD2C,CAG3C;;AACA,SAAKC,cAAL,GAAsBH,YAAY,CAACI,QAAnC;AAEA,SAAKC,OAAL,GAAe,KAAf;AACA,SAAKC,eAAL,GAAuB,IAAIC,GAAJ,EAAvB;AACD;;AAEW,SAALC,KAAK,CAACR,YAAD,EAAe;AACzB,UAAMS,WAAW,GAAGZ,WAAW,CAACa,UAAZ,CAAuBV,YAAvB,EAAqC,EAArC,CAApB;AACAS,IAAAA,WAAW,CAACJ,OAAZ,GAAsB,IAAtB;AACA,WAAOI,WAAP;AACD;;AAEDE,EAAAA,YAAY,GAAG;AACb,QAAI,KAAKN,OAAT,EAAkB;AAChB;AACD;;AACD,SAAKA,OAAL,GAAe,IAAf;;AAEA,SAAK,MAAMO,SAAX,IAAwB,KAAKN,eAA7B,EAA8C;AAC5CM,MAAAA,SAAS;AACV;;AACD,SAAKN,eAAL,CAAqBO,KAArB;AAEAnB,IAAAA,WAAW,CAAC,OAAD,EAAU,IAAV,CAAX;AACD;;AAEDoB,EAAAA,aAAa,CAACF,SAAD,EAAY;AACvB,QAAI,KAAKP,OAAT,EAAkB;AAChB;AACD;;AACD,SAAKC,eAAL,CAAqBS,GAArB,CAAyBH,SAAzB;AACD;;AAEDI,EAAAA,gBAAgB,CAACJ,SAAD,EAAY;AAC1B,SAAKN,eAAL,CAAqBW,MAArB,CAA4BL,SAA5B;AACD;;AAxC2C;;AA2C9CpB,4BAA4B,CAACM,eAAe,CAACoB,SAAjB,EAA4B,CAAC,OAAD,CAA5B,CAA5B;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfxB,EAAAA,cAAc,EAAEE;AADD,CAAjB","sourcesContent":["\"use strict\";\n\nconst { setupForSimpleEventAccessors } = require(\"../helpers/create-event-accessor\");\nconst { fireAnEvent } = require(\"../helpers/events\");\nconst EventTargetImpl = require(\"../events/EventTarget-impl\").implementation;\nconst AbortSignal = require(\"../generated/AbortSignal\");\n\nclass AbortSignalImpl extends EventTargetImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n\n    // make event firing possible\n    this._ownerDocument = globalObject.document;\n\n    this.aborted = false;\n    this.abortAlgorithms = new Set();\n  }\n\n  static abort(globalObject) {\n    const abortSignal = AbortSignal.createImpl(globalObject, []);\n    abortSignal.aborted = true;\n    return abortSignal;\n  }\n\n  _signalAbort() {\n    if (this.aborted) {\n      return;\n    }\n    this.aborted = true;\n\n    for (const algorithm of this.abortAlgorithms) {\n      algorithm();\n    }\n    this.abortAlgorithms.clear();\n\n    fireAnEvent(\"abort\", this);\n  }\n\n  _addAlgorithm(algorithm) {\n    if (this.aborted) {\n      return;\n    }\n    this.abortAlgorithms.add(algorithm);\n  }\n\n  _removeAlgorithm(algorithm) {\n    this.abortAlgorithms.delete(algorithm);\n  }\n}\n\nsetupForSimpleEventAccessors(AbortSignalImpl.prototype, [\"abort\"]);\n\nmodule.exports = {\n  implementation: AbortSignalImpl\n};\n"]},"metadata":{},"sourceType":"script"}