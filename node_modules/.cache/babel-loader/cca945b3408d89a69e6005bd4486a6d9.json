{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nexports.convert = function (value) {\n  let {\n    context = \"The provided value\"\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  function invokeTheCallbackFunction() {\n    if (new.target !== undefined) {\n      throw new Error(\"Internal error: invokeTheCallbackFunction is not a constructor\");\n    }\n\n    const thisArg = utils.tryWrapperForImpl(this);\n    let callResult;\n\n    if (typeof value === \"function\") {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      for (let i = 0; i < Math.min(args.length, 5); i++) {\n        args[i] = utils.tryWrapperForImpl(args[i]);\n      }\n\n      if (args.length < 1) {\n        for (let i = args.length; i < 1; i++) {\n          args[i] = undefined;\n        }\n      } else if (args.length > 5) {\n        args.length = 5;\n      }\n\n      callResult = Reflect.apply(value, thisArg, args);\n    }\n\n    callResult = conversions[\"any\"](callResult, {\n      context: context\n    });\n    return callResult;\n  }\n\n  invokeTheCallbackFunction.construct = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    for (let i = 0; i < Math.min(args.length, 5); i++) {\n      args[i] = utils.tryWrapperForImpl(args[i]);\n    }\n\n    if (args.length < 1) {\n      for (let i = args.length; i < 1; i++) {\n        args[i] = undefined;\n      }\n    } else if (args.length > 5) {\n      args.length = 5;\n    }\n\n    let callResult = Reflect.construct(value, args);\n    callResult = conversions[\"any\"](callResult, {\n      context: context\n    });\n    return callResult;\n  };\n\n  invokeTheCallbackFunction[utils.wrapperSymbol] = value;\n  invokeTheCallbackFunction.objectReference = value;\n  return invokeTheCallbackFunction;\n};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/aljazira/node_modules/jsdom/lib/jsdom/living/generated/OnErrorEventHandlerNonNull.js"],"names":["conversions","require","utils","exports","convert","value","context","invokeTheCallbackFunction","new","target","undefined","Error","thisArg","tryWrapperForImpl","callResult","args","i","Math","min","length","Reflect","apply","construct","wrapperSymbol","objectReference"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nexports.convert = (value, { context = \"The provided value\" } = {}) => {\n  function invokeTheCallbackFunction(...args) {\n    if (new.target !== undefined) {\n      throw new Error(\"Internal error: invokeTheCallbackFunction is not a constructor\");\n    }\n\n    const thisArg = utils.tryWrapperForImpl(this);\n    let callResult;\n\n    if (typeof value === \"function\") {\n      for (let i = 0; i < Math.min(args.length, 5); i++) {\n        args[i] = utils.tryWrapperForImpl(args[i]);\n      }\n\n      if (args.length < 1) {\n        for (let i = args.length; i < 1; i++) {\n          args[i] = undefined;\n        }\n      } else if (args.length > 5) {\n        args.length = 5;\n      }\n\n      callResult = Reflect.apply(value, thisArg, args);\n    }\n\n    callResult = conversions[\"any\"](callResult, { context: context });\n\n    return callResult;\n  }\n\n  invokeTheCallbackFunction.construct = (...args) => {\n    for (let i = 0; i < Math.min(args.length, 5); i++) {\n      args[i] = utils.tryWrapperForImpl(args[i]);\n    }\n\n    if (args.length < 1) {\n      for (let i = args.length; i < 1; i++) {\n        args[i] = undefined;\n      }\n    } else if (args.length > 5) {\n      args.length = 5;\n    }\n\n    let callResult = Reflect.construct(value, args);\n\n    callResult = conversions[\"any\"](callResult, { context: context });\n\n    return callResult;\n  };\n\n  invokeTheCallbackFunction[utils.wrapperSymbol] = value;\n  invokeTheCallbackFunction.objectReference = value;\n\n  return invokeTheCallbackFunction;\n};\n"]},"metadata":{},"sourceType":"script"}